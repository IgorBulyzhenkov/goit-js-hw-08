{"mappings":"IA0BAA,EAAe,MA1BF,CAACC,EAAKC,KACjB,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,GAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,gBAIhCT,IACX,IACE,MAAME,EAAkBG,aAAaK,QAAQV,GAC7C,OAA2B,OAApBE,OAA2BS,EAAYR,KAAKS,MAAMV,GACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,kBAI9BT,IACb,IACEK,aAAaQ,WAAWb,GACxB,MAAOO,GACPC,QAAQD,MAAM,uBAAwBA,EAAME,YCnBhC,MAAVK,EAAOC,SAASC,cAAc,mBA6BpC,WACE,IAAIC,EAAWlB,EAAQmB,KA3BL,uBA8BlB,GADAV,QAAQW,IAAIF,IACPA,EAAU,OACfG,OAAOC,QAAQJ,GAAUK,SACvB,EAAEC,EAAMtB,KAAYa,EAAKU,SAASD,GAAMtB,MAAQA,IA7B/BwB,GAIFX,EAAdY,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACe,IAAIC,SAASf,GACrBQ,SAAQ,CAACC,EAAMtB,IAAUO,QAAQW,IAAI,GAAGlB,OAAWsB,OAC5DT,EAAKgB,QACL/B,EAAQgC,OAZU,0BAgBcjB,EAA7BY,iBAAiB,UAAUC,IAC9B,MAAMJ,KAAEA,EAAItB,MAAEA,GAAU0B,EAAEK,WAEXC,EAAf,IAAIhB,EAAoC,QAAzBgB,EAAAlC,EAAQmB,KAnBL,8BAmBsB,IAAzBe,EAAAA,EAA6B,GAC5ChB,EAASM,GAAQtB,EAEjBF,EAAQmC,KAtBU,sBAsBQjB","sources":["src/js/storage.js","src/js/03-feedback.js"],"sourcesContent":["const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error('Remove state error: ', error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};\n","//Сделал импорт из Storage\nimport Storage from './storage';\n//сделал переменные\nconst form = document.querySelector('.feedback-form');\n\n// Сделал ключ для локального хранилища\nconst STORAGE_KEY = 'feedback-form-state';\n\n// Вызов функции хранилища\ngetTextLocalStorage();\n\n//Повесил слушатилей на форму\n//Беру значения  из формы\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const formData = new FormData(form);\n  formData.forEach((name, value) => console.log(`${value} : ${name}`));\n  form.reset();\n  Storage.remove(STORAGE_KEY);\n});\n\n//запюисываю текст в локальное хранилище\nform.addEventListener('change', e => {\n  const { name, value } = e.target;\n\n  let saveData = Storage.load(STORAGE_KEY) ?? {};\n  saveData[name] = value;\n\n  Storage.save(STORAGE_KEY, saveData);\n});\n\n//Получаю значение из хранилища\nfunction getTextLocalStorage() {\n  let saveData = Storage.load(STORAGE_KEY);\n\n  console.log(saveData);\n  if (!saveData) return;\n  Object.entries(saveData).forEach(\n    ([name, value]) => (form.elements[name].value = value)\n  );\n}\n"],"names":["$3fff5e8daf4b13a6$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","$945622fd0f572e60$var$form","document","querySelector","saveData","load","log","Object","entries","forEach","name","elements","$945622fd0f572e60$var$getTextLocalStorage","addEventListener","e","preventDefault","FormData","reset","remove","target","ref","save"],"version":3,"file":"03-feedback.3c04336c.js.map"}